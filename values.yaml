# Default values for zero-to-hero.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  #repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  fsGroup: 1001
  fsGroupChangePolicy: Always
  supplementalGroups: []
  sysctls: []
    #name: "name"
    #value: "value"

networkPolicy:
  enabled : true
smtp:
  enabled: false

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsGroup: 1000
  unAsUser: 1000
  seccompProfile:
    type: "RuntimeDefault"
  seLinuxOptions: "true"
  allowPrivilegeEscalation: false

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# postgresql:
#   enabled: true
#   primary:
#     containerSecurityContext:
#       enabled: true
#       capabilities:
#         drop:
#         - ALL
#       readOnlyRootFilesystem: true
#       runAsNonRoot: true
#       runAsGroup: 1000
#       unAsUser: 1000
#       seccompProfile:
#         type: "RuntimeDefault"
#       seLinuxOptions: "true"
#       allowPrivilegeEscalation: false

# grafana:
#   grafana:
#     enabled: true
#     ingress:
#       enabled: true
#     containerSecurityContext:
#       enabled: true
#       capabilities:
#         drop:
#         - ALL
#       readOnlyRootFilesystem: true
#       runAsNonRoot: true
#       runAsGroup: 1000
#       unAsUser: 1000
#       seccompProfile:
#         type: "RuntimeDefault"
#       seLinuxOptions: "true"
#       allowPrivilegeEscalation: false

# nginx:
#   enabled: true
#   containerSecurityContext:
#     enabled: true
#     capabilities:
#       drop:
#       - ALL
#     readOnlyRootFilesystem: true
#     runAsNonRoot: true
#     runAsGroup: 1000
#     unAsUser: 1000
#     seccompProfile:
#       type: "RuntimeDefault"
#     seLinuxOptions: "true"
#     allowPrivilegeEscalation: false

# clickhouse:
#   enabled: true
#   zookeeper:
#     enabled: true
#     containerSecurityContext:
#       enabled: true
#       capabilities:
#         drop:
#         - ALL
#       readOnlyRootFilesystem: true
#       runAsNonRoot: true
#       runAsGroup: 1000
#       unAsUser: 1000
#       seccompProfile:
#         type: "RuntimeDefault"
#       seLinuxOptions: "true"
#       allowPrivilegeEscalation: false
#   containerSecurityContext:
#     enabled: true
#     capabilities:
#       drop:
#       - ALL
#     readOnlyRootFilesystem: true
#     runAsNonRoot: true
#     runAsGroup: 1000
#     unAsUser: 1000
#     seccompProfile:
#       type: "RuntimeDefault"
#     seLinuxOptions: "true"
#     allowPrivilegeEscalation: false
